# This file is part of tcp-engine. It is subject to the license terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/lemonrock/tcp-engine/master/COPYRIGHT. No part of tcp-engine, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2018 The developers of tcp-engine. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/lemonrock/tcp-engine/master/COPYRIGHT.


[package]
name = "tcp-engine"
description = "tcp-engine"
keywords = ["tcp-engine"]
license = "AGPL-3.0"
authors = ["Raphael Cohn <raphael.cohn@stormmq.com>"]
documentation = "https://github.com/lemonrock/tcp-engine/blob/master/README.md"
homepage = "https://github.com/lemonrock/tcp-engine"
repository = "https://github.com/lemonrock/tcp-engine.git"
exclude = ["*"]
include = ["README.md", "LICENSE", "COPYRIGHT", "src/**/*.rs", "Cargo.toml", "rustfmt.toml", "clippy.toml"]
readme = "README.md"
publish = false
version = "0.0.0"

[profile.release]
opt-level = 3
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1

[dependencies]
arrayvec = "0.4"
bitflags = "^1.0"
hyper-thread-random = "^0.4"
libc = "^0.2"
memoffset = "^0.2"
num-traits = "^0.2"
sha2 = { version = "^0.7", features = ["asm"] }
md-5 = "^0.7"
siphasher = "^0.2"
time = "^0.1"

[features]
default = ["rfc-4821-minimum-ipv4-path-mtu", "increase-ipv4-mss-acceptable-minimum-to-1024", "increase-ipv6-mss-acceptable-minimum-to-1220", "drop-urgent-pointer-field-non-zero", "drop-options-padding-non-zero", "drop-options-known-fixed-length-invalid", "server-drop-source-port-0"]

# Increases the default Internet Protocol Version 4 Path Maximum Transmission Unit (PathMTU or just MTU) size from 576 bytes to 1024 bytes as recommended in RFC 4821 Section 7.2 Paragraph 2.
#
# Enabled by default.
#
# Can be omitted to reduce the default to 576 bytes.
#
# Note that this *does not* affect the Maximum Segment Size (MSS) assumed in TCP when a Maximum Segment Size (MSS) option is not supplied in the TCP `SYN` or `SYNACK` segments.
rfc-4821-minimum-ipv4-path-mtu = []

# Forces the minimum acceptable Internet Protocol Version 4 TCP Maximum Segment Size (MSS) option to be 984 bytes (rather than 216, the smallest in use as of 2003 for AX.25 packet radio), and forces the default for MSS when the option is not supplied in the TCP `SYN` or `SYNACK` segments to be a protocol-invalid value of 984 rather than 536. It follows, in spirit, the advice of RFC 4821 Section 7.2 Paragraph 2, (984 is 1024 - 40).
#
# Enabled by default.
#
# When enabled, this option will break any TCP stacks that strictly enforce a MSS limit of 536 when negotiating MSS without specifying the MSS option. This is believed to very rare in modern practice.
#
# This change is undertaken because it prevents a potential DoS attacks involving small segments.
increase-ip4-mss-acceptable-minimum-to-1024 = []

# Forces the minimum acceptable Internet Protocol Version 6 TCP Maximum Segment Size (MSS) option to be 1,220 bytes, and forces the default for MSS when the option is not supplied in the TCP `SYN` or `SYNACK` segments to be a protocol-invalid value of 1,220 rather than 536.
#
# Enabled by default.
#
# When enabled, this option will break any TCP stacks that strictly enforce a MSS limit of 536 when negotiating MSS without specifying the MSS option. This is believed to very rare in modern practice.
#
# This change is undertaken because it prevents a potential DoS attacks involving small segments. There is no good reason for a counter-party to negotiate anything less than the minimum of 1220 or assume a default of 536 when using Internet Protocol Version 6. In practice, this is unlikely to break anything other than experimental or attacker TCP stacks.
increase-ipv6-mss-acceptable-minimum-to-1220 = []

# Validates the urgent pointer field is zero unless the URG (Urgent) flag is set.
#
# Enabled by default.
#
# Can be omitted to improve performance (and hence DoS attempts) very very slightly at the risk of making it heuristically more likely to accept attempted TCP attacks.
drop-urgent-pointer-field-non-zero = []

# Validates that the padding at the end of TCP options is zero (empty).
#
# Enabled by default.
#
# Can be omitted to improve performance (and hence DoS attempts) very slightly at the risk of making it heuristically more likely to accept attempted TCP attacks.
drop-options-padding-non-zero = []

# Validates that the length of known options with a fixed length is correct.
#
# Enabled by default.
#
# Can be omitted to improve performance (and hence DoS attempts) very very slightly at the risk of making it heuristically more likely to accept attempted TCP attacks.
drop-options-known-fixed-length-invalid = []

# Validates that source port can not be zero; a zero source port is very rare.
#
# Enabled by default.
#
# Can be omitted to improve performance (and hence DoS attempts) very very slightly at the risk of making it heuristically more likely to accept attempted TCP attacks.
server-drop-source-port-0 = []

# Validates that source port is not one of the reserved ports.
#
# Disabled by default.
#
# Most TCP traffic should not be using these ports, but some might be; enabling this may break some clients.
server-drop-source-ports-1-1023 = []

# Validates that source port is not one of the experimental ports in RFC 4727 (1021 and 1022).
#
# Disabled by default.
#
# Most TCP traffic should not be using these ports, but some might be; enabling this may break some clients.
server-drop-source-ports-experimental-rfc-4727 = []
